buildscript {
	ext {
		grailsVersion = project.grailsVersion
	}
	repositories {
		mavenLocal()
		maven { url "https://repo.grails.org/grails/core" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
//		classpath "org.grails.plugins:hibernate5:${gormVersion - ".RELEASE"}"
		classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
	}
}

//plugins {
//	id "io.spring.dependency-management" version "1.0.9.RELEASE"
//	id "com.jfrog.bintray" version "1.2"
//}

version "3.0.10"
group "org.grails.plugins"

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
//apply plugin: 'maven-publish'

// Used for publishing to central repository, remove if not needed
//apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
//apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

ext {
	grailsVersion = project.grailsVersion
	gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.grails.org/grails/core" }
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

//dependencyManagement {
//	imports {
//		mavenBom "org.grails:grails-bom:$grailsVersion"
//	}
//	applyMavenExclusions false
//}

dependencies {
	developmentOnly("org.springframework.boot:spring-boot-devtools")
	compile "org.springframework.boot:spring-boot-starter-logging"
	compile "org.springframework.boot:spring-boot-autoconfigure"
	compile "org.grails:grails-core"
	compile "org.springframework.boot:spring-boot-starter-actuator"
	compile "org.springframework.boot:spring-boot-starter-tomcat"
	compile "org.grails:grails-web-boot"
	compile "org.grails:grails-logging"
	compile "org.grails:grails-plugin-rest"
	compile "org.grails:grails-plugin-databinding"
	compile "org.grails:grails-plugin-i18n"
	compile "org.grails:grails-plugin-services"
	compile "org.grails:grails-plugin-url-mappings"
	compile "org.grails:grails-plugin-interceptors"
	compile "org.grails.plugins:cache"
	compile "org.grails.plugins:async"
	compile "org.grails.plugins:scaffolding"
	compile "org.grails.plugins:gsp"
	compile group: "joda-time", name:"joda-time", version:"2.10.5"
	compile "org.grails.plugins:joda-time:2.0.0"

	compileOnly "io.micronaut:micronaut-inject-groovy"
	console "org.grails:grails-console"
	profile "org.grails.profiles:web-plugin"
	runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"
	testCompile "org.grails:grails-gorm-testing-support"
	testCompile "org.mockito:mockito-core"
	testCompile "org.grails:grails-web-testing-support"

//	provided "org.grails:grails-plugin-services"
//	provided "org.grails:grails-plugin-domain-class"
//	provided 'org.springframework.boot:spring-boot-starter-logging'
//	provided "org.springframework.boot:spring-boot-starter-actuator"
//	provided "org.springframework.boot:spring-boot-autoconfigure"
//	provided "org.springframework.boot:spring-boot-starter-tomcat"
//	provided "org.grails:grails-dependencies"
//	provided "org.grails:grails-web-boot"
//	compile "org.grails:grails-logging"
//	compile "org.hibernate:hibernate-core:5.2.18.Final"
//	compile "org.hibernate:hibernate-ehcache:5.2.18.Final"
//	compile "org.grails.plugins:hibernate5:6.1.11"
//	runtime "org.apache.tomcat:tomcat-jdbc"
//
////	provided 'org.grails.plugins:hibernate5'
//	provided "org.grails.plugins:cache"
////	provided "org.hibernate:hibernate-ehcache"
//	provided 'javax.servlet:javax.servlet-api:3.1.0'
//
//	testCompile "org.grails:grails-plugin-testing"
//	testCompile "org.grails:grails-test-mixins:3.3.0"
//	testCompile "org.grails.plugins:geb"
//	testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
//	testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
//
//	console "org.grails:grails-console"
}

bootRun {
	ignoreExitValue true
	jvmArgs(
			'-Dspring.output.ansi.enabled=always',
			'-noverify',
			'-XX:TieredStopAtLevel=1',
			'-Xmx1024m')
	sourceResources sourceSets.main
	String springProfilesActive = 'spring.profiles.active'
	systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
	configure(groovyOptions) {
		forkOptions.jvmArgs = ['-Xmx1024m']
	}
}

// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false
grailsPublish {
	// TODO: Provide values here
	user = 'user'
	key = 'key'
	githubSlug = 'foo/bar'
	license {
		name = 'Apache-2.0'
	}
	title = "My Plugin"
	desc = "Full plugin description"
	developers = [johndoe:"John Doe"]
}



assets {
	packagePlugin = true
}


//
//task wrapper(type: Wrapper) {
//	gradleVersion = gradleWrapperVersion
//}

//bintray {
//	user = System.getenv("BINTRAY_USER") ?: project.hasProperty("bintrayUser") ? project.bintrayUser : ''
//	key = System.getenv("BINTRAY_KEY") ?: project.hasProperty("bintrayKey") ? project.bintrayKey : ''
//	publications = ['maven']
//	pkg {
//		repo = 'grails-plugins'
//		userOrg = 'ctoestreich'
//		name = "filterpane"
//		desc = "Grails Filterpane Plugin"
//		websiteUrl = "http://grails.org/plugin/grails-filterpane"
//		issueTrackerUrl = "https://github.com/Grails-Plugin-Consortium/grails-filterpane/issues"
//		vcsUrl = "https://github.com/Grails-Plugin-Consortium/grails-filterpane"
//		licenses = ['Apache-2.0']
//		publicDownloadNumbers = true
//	}
//}

//jar {
//	exclude "com/demo/**"
//}


//bintrayUpload.dependsOn sourcesJar, javadocJar
